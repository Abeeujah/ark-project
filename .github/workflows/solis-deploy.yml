name: Solis Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-push-solis-image:
    name: Build and push Solis image to Amazon ECR
    runs-on: ubuntu-latest # This specifies the runner environment
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
      - name: Build Solis, tag, and push image to Amazon ECR
        run: |
          docker buildx create --use --name ecr-deploy-builder-solis
          docker buildx build --tag ${{ secrets.ECR_URL }}:solis-latest --file ./Dockerfile . --load
          docker push ${{ secrets.ECR_URL }}:solis-latest
  deploy-solis:
    needs: build-and-push-solis-image
    name: Deploy Solis latest image to Amazon ECS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
      - name: Install pnpm
        run: |
          npm install -g pnpm
          npm install -g aws-cdk
          pnpm install
      - name: Read environment variables from file
        id: vars
        run: |
          content=`cat contracts.json`
          STARKNET_APPCHAIN_MESSAGING_ADDRESS_GOERLI=$(echo $content | jq -r '.goerli.messaging')
          echo "STARKNET_APPCHAIN_MESSAGING_ADDRESS_GOERLI=$STARKNET_APPCHAIN_MESSAGING_ADDRESS_GOERLI" >> $GITHUB_ENV
      - name: Install dependencies
        run: |
          cd aws/cdk-solis-ecs
          pnpm install
      - name: Deploy CDK Stack Goerli
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          STARKNET_NODE_URL: ${{ secrets.STARKNET_NODE_URL_GOERLI }}
          STARKNET_APPCHAIN_MESSAGING_ADDRESS: ${{ env.STARKNET_APPCHAIN_MESSAGING_ADDRESS_GOERLI }}
          STARKNET_SOLIS_ACCOUNT_ADDRESS: ${{ secrets.STARKNET_SOLIS_ACCOUNT_ADDRESS_GOERLI }}
          STARKNET_SOLIS_ACCOUNT_PRIVATE_KEY: ${{ secrets.STARKNET_SOLIS_ACCOUNT_PRIVATE_KEY_GOERLI }}
        run: |
          cd aws/cdk-solis-ecs
          pnpm cdk deploy --all --require-approval never
